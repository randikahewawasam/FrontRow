package com.frontrow.ui;

import java.util.List;

import com.frontrow.adapters.FrontRowContactAdapter;
import com.frontrow.adapters.FrontRowCustomFileldsAdapter;
import com.frontrow.base.BaseActivity;
import com.frontrow.common.Constants;
import com.frontrow.common.SharedMethods;
import com.frontrow.datamanagers.ContactsDataManager;
import com.frontrow.datamanagers.CustomFieldDataManager;
import com.frontrow.interfaces.FRSContactListBtnListener;
import com.row.mix.beans.Contact;
import com.row.mix.beans.CustomField;
import com.row.mix.beans.Location;

import android.net.Uri;
import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.view.Menu;
import android.view.View;
import android.widget.ListView;

public class ContactList extends BaseActivity implements FRSContactListBtnListener {
	private ListView contactList;
	FrontRowContactAdapter adapter;

    @Override
    public void onCreate(Bundle savedInstanceState) {
    	setContentView(R.layout.activity_contact_list);
        super.onCreate(savedInstanceState);
        
    }

  /*  @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.activity_contact_list, menu);
        return true;
    }*/

	@Override
	protected void initializeUI() {
		// TODO Auto-generated method stub
		contactList =(ListView) findViewById(R.id.contactlist);
		 List<Contact> contact_list = ContactsDataManager.getSharedInstance().getContactslist();
		 adapter = new FrontRowContactAdapter(this,
  			 R.layout.contactlistrow, contact_list);
		 contactList.setAdapter(adapter);
	}

	@Override
	protected void refreshUI() {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void onResume() {
		super.onResume();	
		 adapter.setContactListBtnListener(this);
	}

	@Override
	public void doBtnWorks(View v, int type, Contact con) {
		if (type==Constants.CALL_BTN){
		SharedMethods.callPhone(getParent(), con.getPrimaryPhone().getPhoneNumber());
	
		}
		else if (type==Constants.NUMBERS_BTN){
			
			Bundle bundle = new Bundle();
			
			bundle.putSerializable(Constants.CONTACT, con);
           			
			getParent().showDialog(Constants.SHOW_CONTACTS_PHONE, bundle);
		}
		
		else if (type ==Constants.MAP_BTN){
			String street,city,postal,province,country;
			if (con.getPrimaryAddress().getStreet()!="")
			{
				street=con.getPrimaryAddress().getStreet()+",";
			}
			else{
				street="";
			}
			if(con.getPrimaryAddress().getCity()!=""){
				
			city=con.getPrimaryAddress().getCity()+",";	
			}
			else{
				city="";
			}
			if(con.getPrimaryAddress().getPostal()!="" && con.getPrimaryAddress().getPostal()!=null ){
				postal=con.getPrimaryAddress().getPostal()+",";
			}
			else
			{
				postal="";
			}
			if(con.getPrimaryAddress().getProvince()!="")
			{
				province=con.getPrimaryAddress().getProvince()+",";
			}
			else{
			    province="";
			}
			if(con.getPrimaryAddress().getCountry()!=""){
				country=con.getPrimaryAddress().getCountry()+",";
			}
			else{
				country="";
			}
			
				
			String address = street+city+postal+province+country;
			Location loc=SharedMethods.getLocationInfo(address);
			if (loc.getStatus().equalsIgnoreCase("OK")){
				
				Bundle bundle = new Bundle();
				bundle.putSerializable("LOCATION", loc);
				bundle.putString("TYPE", "LOCATION");
				if(loc.getLat()!=0.0 && loc.getLng()!=0.0)
				{
					Intent subCatList = new Intent(ContactList.this, FRSMap.class);
					subCatList.putExtras(bundle);
					com.frontrow.ui.TabManager parentActivity = (TabManager) getParent();
					parentActivity.startChild("MAP_Activity",subCatList);
					}
				else{
			    	Bundle bundle2 = new Bundle();
					bundle2.putString(Constants.ERROR_D, getResources().getString(R.string.NO_LAT_LON_FOUND));
					bundle2.putString(Constants.TYPE, Constants.GENARAL_ERROR_TYPE);				
					getParent().showDialog(Constants.ERROR_DIALOG,bundle2);
					}
			}
			else{
		    	Bundle bundle2 = new Bundle();
				bundle2.putString(Constants.ERROR_D, getResources().getString(R.string.NO_LAT_LON_FOUND));
				bundle2.putString(Constants.TYPE, Constants.GENARAL_ERROR_TYPE);				
				getParent().showDialog(Constants.ERROR_DIALOG,bundle2);
				}
			
		}
		
		else if (type==Constants.DIRECTION_BTN){
			String street,city,postal,province,country;
			if (con.getPrimaryAddress().getStreet()!="")
			{
				street=con.getPrimaryAddress().getStreet()+",";
			}
			else{
				street="";
			}
			if(con.getPrimaryAddress().getCity()!=""){
				
			city=con.getPrimaryAddress().getCity()+",";	
			}
			else{
				city="";
			}
			if(con.getPrimaryAddress().getPostal()!="" && con.getPrimaryAddress().getPostal()!=null ){
				postal=con.getPrimaryAddress().getPostal()+",";
			}
			else
			{
				postal="";
			}
			if(con.getPrimaryAddress().getProvince()!="")
			{
				province=con.getPrimaryAddress().getProvince()+",";
			}
			else{
			    province="";
			}
			if(con.getPrimaryAddress().getCountry()!=""){
				country=con.getPrimaryAddress().getCountry()+",";
			}
			else{
				country="";
			}
			
				
			String address = street+city+postal+province+country;
			Location loc=SharedMethods.getLocationInfo(address);
			
			if (loc.getStatus().equalsIgnoreCase("OK")){
				if(loc.getLat()!=0.0 && loc.getLng()!=0.0)
			{
				double lat = loc.getLat();
				double lon = loc.getLng();
				String fullPath = Constants.NATIVE_MAP_PATH+Constants.SADDR+Double.toString(appUsr.getLat())+","+ Double.toString(appUsr.getLon())+"&"
						+Constants.DADDR+Double.toString(lat)+","+ Double.toString(lon);
				final Intent intent = new Intent(Intent.ACTION_VIEW, Uri
						.parse(fullPath));
				intent.setClassName("com.google.android.apps.maps",
						"com.google.android.maps.MapsActivity");
				startActivity(intent);
				}
				else{
			    	Bundle bundle2 = new Bundle();
					bundle2.putString(Constants.ERROR_D, getResources().getString(R.string.NO_LAT_LON_FOUND));
					bundle2.putString(Constants.TYPE, Constants.GENARAL_ERROR_TYPE);				
					getParent().showDialog(Constants.ERROR_DIALOG,bundle2);
					}
			}
			else{
		    	Bundle bundle2 = new Bundle();
				bundle2.putString(Constants.ERROR_D, getResources().getString(R.string.NO_LAT_LON_FOUND));
				bundle2.putString(Constants.TYPE, Constants.GENARAL_ERROR_TYPE);				
				getParent().showDialog(Constants.ERROR_DIALOG,bundle2);
				}
			
		}
		
		else if(type==Constants.EMAIL_BTN){
			
			if (con.getEmail()!=""){
				
				SharedMethods.sendEmail(this,"sudeepa.m31@gmail.com");
			}
				else{
			    	Bundle bundle2 = new Bundle();
					bundle2.putString(Constants.ERROR_D, getResources().getString(R.string.NO_EMAIL));
					bundle2.putString(Constants.TYPE, Constants.GENARAL_ERROR_TYPE);				
					getParent().showDialog(Constants.ERROR_DIALOG,bundle2);
					}
			
			
		}
		
	}
}
