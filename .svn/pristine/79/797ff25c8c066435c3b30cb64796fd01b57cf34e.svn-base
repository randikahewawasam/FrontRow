package com.frontrow.ui;




import com.frontrow.common.Constants;
import com.frontrow.common.SharedMethods;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;

public class FRSTabNegotiator extends TabManager{
	public static final String INTENT_KEY = "id";
	private Bundle bundle;
	private ProgressDialog dialog;
	int refType = -1;

	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		bundle = getIntent().getExtras();
		refType = bundle.getInt(Constants.ACTIVITY_TYPE);
		SharedMethods.logError("Ref Type  :- " + refType);
		redirect(refType);
	}
	
	private void redirect(int type) {
		switch (type) {
		case Constants.MESSAGES_REF:
			try {
				startChild("Message_Activity", new Intent(this,
						FRSMessages.class));	
			} catch (Exception e) {
				// TODO: handle exception
				SharedMethods.logError("TabNe "+ e.getMessage());
			}

			break;
		case Constants.CLIENTS_REF:
			startChild("Client_Activity", new Intent(this,
					FRSClientList.class));
			break;
		case Constants.SETTINGS_REF:
			startChild("Settings_Activity", new Intent(this,
					FRSSettings.class));
			break;
		
		default:
			break;
		}
	}
	
	@Override
	protected Dialog onCreateDialog(int id, Bundle args) {
		
		
		switch (id) {
		
		case Constants.ERROR_DIALOG:
			AlertDialog al = null;
			AlertDialog.Builder errDialog = new AlertDialog.Builder(getParent());
			String errr = args.getString(Constants.ERROR_D);
			final String type = args.getString(Constants.TYPE);
			SharedMethods.logError("Type : "+ type);
			errDialog.setCancelable(false);
			errDialog.setMessage(errr);
			//String btnTxt = (type.equals(Constants.VERIFY_MOBILE_TYPE))?getResources().getString(R.string.VERIFY):getResources().getString(R.string.OK);
			errDialog.setPositiveButton("yes",
					new DialogInterface.OnClickListener() {
				@Override
				public void onClick(DialogInterface dialog, int which) {
					if(type != null){
						 if(type.equals(Constants.NAVIGATE_TO_PREVIOUS_PAGE_TYPE)){
							FRSClientsNoteDescription clientNoteDesc = (FRSClientsNoteDescription) getLocalActivityManager().getCurrentActivity();
							clientNoteDesc.navigateToPreviousPage();
						}
						
						
						
					}
					removeDialog(Constants.ERROR_DIALOG);
				}
			});
			
			errDialog.setNegativeButton("No", new DialogInterface.OnClickListener() {
				@Override
				public void onClick(DialogInterface dialog, int which) {
					if(type != null){
						 if(type.equals(Constants.NAVIGATE_TO_PREVIOUS_PAGE_TYPE)){
							 removeDialog(Constants.ERROR_DIALOG);
						}
						
						
						
					}
					
				}
			});
		

		
			al = errDialog.create();

			WindowManager.LayoutParams lpA = new WindowManager.LayoutParams();
			lpA.copyFrom(al.getWindow().getAttributes());
			lpA.width = WindowManager.LayoutParams.FILL_PARENT;
			lpA.height = WindowManager.LayoutParams.WRAP_CONTENT;
			lpA.dimAmount=0.5f;
			al.setOwnerActivity((Activity) getParent());
			al.getWindow().setAttributes(lpA);
			al.getWindow().addFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);
			return al;
		case Constants.ADD_NOTE_DIALOG:
			
			Dialog addNote = new Dialog(this,R.style.customeDialog);
			addNote.setCancelable(true);
			WindowManager.LayoutParams addNotelp = new WindowManager.LayoutParams();
			addNotelp.width = WindowManager.LayoutParams.FILL_PARENT;
			addNotelp.height = WindowManager.LayoutParams.WRAP_CONTENT;
			addNotelp.dimAmount=0.5f;

			View sCriteriaView = LayoutInflater.from(this).inflate(R.layout.frsaddnote, null);
			addNote.getWindow().addFlags(WindowManager.LayoutParams.FLAG_BLUR_BEHIND);
			addNote.requestWindowFeature(Window.FEATURE_NO_TITLE);
			addNote.setContentView(sCriteriaView);
			addNote.setTitle(getResources().getString(R.string.ADD_NOTE));
			final EditText note = (EditText) sCriteriaView.findViewById(R.id.addNoteText); 
			Button search = (Button) sCriteriaView.findViewById(R.id.btnAddNote);
			ImageButton close =(ImageButton ) sCriteriaView.findViewById(R.id.dismiss);
			search.setOnClickListener(new OnClickListener() {

				@Override
				public void onClick(View v) {
					// TODO Auto-generated method stub
					if(!note.getText().toString().equals("")){
						FRSClientsNotes cnotes= (FRSClientsNotes) getLocalActivityManager().getCurrentActivity();
					//FRSClientsNotes cnotes= (FRSClientsNotes) getLocalActivityManager().getActivity("FRSClientsNoteActivity");
					cnotes.saveNote(note.getText().toString());
					}else{
					/*	NearBy near= (NearBy) getLocalActivityManager().getActivity("NearByActivity");
						near.getSearchResults(location.getText().toString(), merchant.getText().toString());*/
					}

				}
			});
			
			close.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
					 removeDialog(Constants.ADD_NOTE_DIALOG);
					
				}
			});
			
			
			addNote.getWindow().setAttributes(addNotelp);
			addNote.getWindow().addFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);


			return addNote;

		
		}
		return null;
	}
}
